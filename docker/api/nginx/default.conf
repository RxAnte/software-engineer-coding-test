server {
    server_name _;
    listen 80 default_server;

    port_in_redirect on;
    absolute_redirect on;

    # Let certbot work
    location ~ \.well-known\/.+ {
        root /var/www/letsencrypt;
        try_files $uri =404;
        satisfy any;
        allow all;
        break;
    }

    root /var/www/public;

    index index.php index.html index.htm;

    charset utf-8;

    # Remove index.php from root URI
    if ($request_uri ~* "^/index\.php$") {
        return 301 /;
    }

    # Allow large file uploads
    client_max_body_size 500m;

    # Enable Gzip
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

    # Security
    location ~* /xmlrpc.php$ {
        deny all;
    }
    location ~* /(?:uploads|files|wp-content|wp-includes|akismet)/.*.php$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    location ~ /\.(svn|git)/* {
        deny all;
        access_log off;
        log_not_found off;
    }
    location ~ /\.ht {
        deny all;
        access_log off;
        log_not_found off;
    }
    location ~ /\.user.ini {
        deny all;
        access_log off;
        log_not_found off;
    }
    add_header X-Frame-Options SAMEORIGIN always;
    add_header Strict-Transport-Security "max-age=31536000" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Access-Control-Allow-Origin * always;
    add_header Access-Control-Allow-Credentials "true" always;
    add_header Access-Control-Allow-Methods "GET,HEAD,OPTIONS,POST,PUT" always;
    add_header Access-Control-Allow-Headers "Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers" always;

    location / {
        # We don't need the rest of these rules if the file or directory exists
        if (-f $request_filename) {
            break;
        }
        if (-d $request_filename) {
            break;
        }

        # Remove index.php from URL
        rewrite ^(/index\.php)(.*) $2 permanent;

        # Serve through index.php
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt { access_log off; log_not_found off; }

    error_page 404 /index.php;

    access_log /var/log/nginx/access.log main;

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        include fastcgi_params;
        fastcgi_index index.php;
        fastcgi_param HTTP_PROXY "";
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_pass unix:/var/run/php-fpm-www.sock;
    }
}
